

#include <stdio.h>
#include <math.h>
#include <iostream>
#include "AFEM_Linear_routines.cuh"

#include "cuda.h"
#include <cuda_runtime.h>
#include <fstream>


#define nodesinelemX(node,el,nodesPerElem) (node + nodesPerElem*el) //the first entry is the element # the second entry would be the element number and the last one is the number of nodes/element
#define threeD21D(row_d,col_d,el_d,width_d,depth_d) (row_d+width_d*(col_d+depth_d*el_d)) //
#define nodesDisplacementX(dof,node,dimension) (dof + node*dimension)
#define IDX2C(i,j,ld) (((j)*(ld))+( i )) 


__device__ void find_rotation_corotational(float R[3][3], AFEM::element *in_element, AFEM::position_3D *current_pos, AFEM::position_3D *original_pos){
	//Current nodal positions
	AFEM::position_3D n1, n2, n3, n4;
	n1 = current_pos[in_element->nodes_in_elem[0]];
	n2 = current_pos[in_element->nodes_in_elem[1]];
	n3 = current_pos[in_element->nodes_in_elem[2]];
	n4 = current_pos[in_element->nodes_in_elem[3]];

	//Original nodal positions
	AFEM::position_3D k1, k2, k3, k4;
	k1 = original_pos[in_element->nodes_in_elem[0]];
	k2 = original_pos[in_element->nodes_in_elem[1]];
	k3 = original_pos[in_element->nodes_in_elem[2]];
	k4 = original_pos[in_element->nodes_in_elem[3]];
	//float c_inv11 = -(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-(-n1.x + n3.x)*(n1.x - n2.x)*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) + (-n1.x + n4.x) / (-n1.x + n2.x))*((n1.x - n2.x)*(-n1.y + n2.y)*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) - (-n1.z + n2.z) / (-n1.x + n2.x)) / ((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z))) + 1 / (-n1.x + n2.x) + (-n1.x + n3.x)*(n1.x - n2.x)*(-n1.y + n2.y) / ((-n1.x + n2.x)*(-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y)));
	//float c_inv12 = (n1.x - n2.x)*(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-(-n1.x + n3.x)*(n1.x - n2.x)*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) + (-n1.x + n4.x) / (-n1.x + n2.x))*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / (((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)))) - (-n1.x + n3.x)*(n1.x - n2.x) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y)));
	//float c_inv13 = -(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-(-n1.x + n3.x)*(n1.x - n2.x)*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) + (-n1.x + n4.x) / (-n1.x + n2.x)) / ((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)));
	//float c_inv21 = -(n1.x - n2.x)*(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.y + n2.y)*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) - (-n1.z + n2.z) / (-n1.x + n2.x))*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x)) / (((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)))) - (n1.x - n2.x)*(-n1.y + n2.y) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y)));
	//float c_inv22 = (n1.x - n2.x)*(n1.x - n2.x)*(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x))*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / (((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)))) + (n1.x - n2.x) / ((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y));
	//float c_inv23 = -(n1.x - n2.x)*(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-n1.y + n4.y - (-n1.x + n4.x)*(-n1.y + n2.y) / (-n1.x + n2.x)) / (((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z))));
	//float c_inv31 = (n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.y + n2.y)*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / ((-n1.x + n2.x)*((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))) - (-n1.z + n2.z) / (-n1.x + n2.x)) / ((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)));
	//float c_inv32 = -(n1.x - n2.x)*(n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y))*(-n1.z + n3.z - (-n1.x + n3.x)*(-n1.z + n2.z) / (-n1.x + n2.x)) / (((n1.x - n2.x)*(-n1.y + n3.y) + (n1.x - n3.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z))));
	//float c_inv33 = (n1.x - n2.x)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) / ((n1.x - n2.x)*(-n1.z + n4.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + (n1.x - n4.x)*(n1.z - n2.z)*((n1.x - n2.x)*(n1.y - n3.y) - (n1.x - n3.x)*(n1.y - n2.y)) + ((n1.x - n2.x)*(-n1.y + n4.y) + (n1.x - n4.x)*(n1.y - n2.y))*((n1.x - n2.x)*(-n1.z + n3.z) + (n1.x - n3.x)*(n1.z - n2.z)));

	float c11 = -n1.x + n2.x;
	float c12 = -n1.x + n3.x;
	float c13 = -n1.x + n4.x;
	float c21 = -n1.y + n2.y;
	float c22 = -n1.y + n3.y;
	float c23 = -n1.y + n4.y;
	float c31 = -n1.z + n2.z;
	float c32 = -n1.z + n3.z;
	float c33 = -n1.z + n4.z;

	float c_inv11 = (c22*c33 - c23*c32) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv12 = (-c12*c33 + c13*c32) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv13 = (c12*c23 - c13*c22) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv21 = (-c21*c33 + c23*c31) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv22 = (c11*c33 - c13*c31) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv23 = (-c11*c23 + c13*c21) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv31 = (c21*c32 - c22*c31) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv32 = (-c11*c32 + c12*c31) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);
	float c_inv33 = (c11*c22 - c12*c21) / (c11*c22*c33 - c11*c23*c32 - c12*c21*c33 + c12*c23*c31 + c13*c21*c32 - c13*c22*c31);



	float a11 = c_inv11*(-k1.x + k2.x) + c_inv21*(-k1.x + k3.x) + c_inv31*(-k1.x + k4.x);
	float a12 = c_inv12*(-k1.x + k2.x) + c_inv22*(-k1.x + k3.x) + c_inv32*(-k1.x + k4.x);
	float a13 = c_inv13*(-k1.x + k2.x) + c_inv23*(-k1.x + k3.x) + c_inv33*(-k1.x + k4.x);
	float a21 = c_inv11*(-k1.y + k2.y) + c_inv21*(-k1.y + k3.y) + c_inv31*(-k1.y + k4.y);
	float a22 = c_inv12*(-k1.y + k2.y) + c_inv22*(-k1.y + k3.y) + c_inv32*(-k1.y + k4.y);
	float a23 = c_inv13*(-k1.y + k2.y) + c_inv23*(-k1.y + k3.y) + c_inv33*(-k1.y + k4.y);
	float a31 = c_inv11*(-k1.z + k2.z) + c_inv21*(-k1.z + k3.z) + c_inv31*(-k1.z + k4.z);
	float a32 = c_inv12*(-k1.z + k2.z) + c_inv22*(-k1.z + k3.z) + c_inv32*(-k1.z + k4.z);
	float a33 = c_inv13*(-k1.z + k2.z) + c_inv23*(-k1.z + k3.z) + c_inv33*(-k1.z + k4.z);





	//thrid line of A is non gram-schmit
	/*R[0][0] = a11 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][1] = a21 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][2] = a31 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[1][0] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12 - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][1] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][2] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[2][0] = a21*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) - a31*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)));
	R[2][1] = -a11*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)d+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) - a21*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12 - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)));
	*/
	R[0][0] = a11 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][1] = a21 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][2] = a31 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[1][0] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12 - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][1] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][2] = (-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[2][0] = a21*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) - a31*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)));
	R[2][1] = -a11*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + a31*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12 - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)));
	R[2][2] = a11*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22 - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) - a21*(-a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12 - a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / (sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))*sqrt((a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12 + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)))*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22 + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) + (a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)));

	R[0][0] = a11 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][1] = a21 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[0][2] = a31 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31));
	R[1][0] = (-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][1] = (-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[1][2] = (-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32));
	R[2][0] = (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) / sqrt((-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33)*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33));
	R[2][1] = (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) / sqrt((-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33)*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33));
	R[2][2] = (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33) / sqrt((-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a13 - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)))*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a23 - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32))) + (-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33)*(-a11*a13 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a13*(-a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a12) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a21*a23 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a23*(-a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a22) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) - a31*a33 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a33*(-a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a32) / sqrt((a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12)*(a11*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a12) + (a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22)*(a21*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a22) + (a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)*(a31*(a11*a12 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a21*a22 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) + a31*a32 / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31))) / sqrt((a11)*(a11)+(a21)*(a21)+(a31)*(a31)) - a32)) + a33));


}
__device__ void find_Jacobian_localK_localM_corotational(AFEM::element *in_element, AFEM::position_3D *in_pos, AFEM::position_3D *original_pos){

	/*float x14 = in_element->position_info[0].x - in_element->position_info[3].x;
	float x24 = in_element->position_info[1].x - in_element->position_info[3].x;
	float x34 = in_element->position_info[2].x - in_element->position_info[3].x;*/
	//Original nodal positions
	AFEM::position_3D k1, k2, k3, k4;
	k1 = original_pos[in_element->nodes_in_elem[0]];
	k2 = original_pos[in_element->nodes_in_elem[1]];
	k3 = original_pos[in_element->nodes_in_elem[2]];
	k4 = original_pos[in_element->nodes_in_elem[3]];
	//four node positions
	AFEM::position_3D n1, n2, n3, n4;
	n1 = in_pos[in_element->nodes_in_elem[0]];
	n2 = in_pos[in_element->nodes_in_elem[1]];
	n3 = in_pos[in_element->nodes_in_elem[2]];
	n4 = in_pos[in_element->nodes_in_elem[3]];


	float x14 = n1.x - n4.x;
	float x24 = n2.x - n4.x;
	float x34 = n3.x - n4.x;

	float y14 = n1.y - n4.y;
	float y24 = n2.y - n4.y;
	float y34 = n3.y - n4.y;


	float z14 = n1.z - n4.z;
	float z24 = n2.z - n4.z;
	float z34 = n3.z - n4.z;



	//std::cout << x14*(y24*z34 - y34*z24) - y14*(x24*z34 - z24 * 34) + z14*(x24*y34 - y24*x34) << std::endl;
	float det_J = (x14*(y24*z34 - y34*z24) - y14*(x24*z34 - z24 * x34) + z14*(x24*y34 - y24*x34));
	float J_bar11 = (y24*z34 - z24*y34) / det_J;
	float J_bar12 = (z14*y34 - y14*z34) / det_J;
	float J_bar13 = (y14*z24 - z14*y24) / det_J;

	float J_bar21 = (z24*x34 - x24*z34) / det_J;
	float J_bar22 = (x14*z34 - z14*x34) / det_J;
	float J_bar23 = (z14*x24 - x14*z24) / det_J;

	float J_bar31 = (x24*y34 - y24*x34) / det_J;
	float J_bar32 = (y14*x34 - x14*y34) / det_J;
	float J_bar33 = (x14*y24 - y14*x24) / det_J;

	float J_star1 = -(J_bar11 + J_bar12 + J_bar13);
	float J_star2 = -(J_bar21 + J_bar22 + J_bar23);
	float J_star3 = -(J_bar31 + J_bar32 + J_bar33);


	//Initi
	float R[3][3];
	find_rotation_corotational(R, in_element, in_pos, original_pos);
	//float R11(R[0][0]), R12(R[0][1]), R13(R[0][2]), R21(R[1][0]), R22(R[1][1]), R23(R[1][2]), R31(R[2][0]), R32(R[2][1]), R33(R[2][2]);
	float R11(1.0), R12(0.0), R13(0.0), R21(0.0), R22(1.0), R23(0.0), R31(0.0), R32(0.0), R33(1.0);



	float rho = 1000.0;
	in_element->Jacobian = det_J;

	in_element->volume = det_J / 6.0;

	float E =25000.0;
	float nu = 0.49;




	//The section of code below is for R K R.inv()
	in_element->local_K[0] = -0.166666666666667*E*det_J*(R11*(-J_bar11*J_bar21*R12*(nu - 1.0) - J_bar11*J_bar31*R13*(nu - 1.0) - R11*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R12*(-J_bar11*J_bar21*R11*(nu - 1.0) - J_bar21*J_bar31*R13*(nu - 1.0) - R12*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R13*(-J_bar11*J_bar31*R11*(nu - 1.0) - J_bar21*J_bar31*R12*(nu - 1.0) - R13*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[1] = -0.166666666666667*E*det_J*(R21*(-J_bar11*J_bar21*R12*(nu - 1.0) - J_bar11*J_bar31*R13*(nu - 1.0) - R11*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R22*(-J_bar11*J_bar21*R11*(nu - 1.0) - J_bar21*J_bar31*R13*(nu - 1.0) - R12*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R23*(-J_bar11*J_bar31*R11*(nu - 1.0) - J_bar21*J_bar31*R12*(nu - 1.0) - R13*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[2] = -0.166666666666667*E*det_J*(R31*(-J_bar11*J_bar21*R12*(nu - 1.0) - J_bar11*J_bar31*R13*(nu - 1.0) - R11*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R32*(-J_bar11*J_bar21*R11*(nu - 1.0) - J_bar21*J_bar31*R13*(nu - 1.0) - R12*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R33*(-J_bar11*J_bar31*R11*(nu - 1.0) - J_bar21*J_bar31*R12*(nu - 1.0) - R13*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[3] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R13*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R12*(-R11*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R13*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R13*(R11*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[4] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R13*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R22*(-R11*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R13*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R23*(R11*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[5] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R13*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R32*(-R11*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R13*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R33*(R11*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[6] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R13*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R12*(-R11*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R13*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R13*(R11*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[7] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R13*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R22*(-R11*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R13*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R23*(R11*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[8] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R13*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R32*(-R11*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R13*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R33*(R11*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R12*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[9] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R13*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R12*(-R11*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R13*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R13*(R11*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R12*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[10] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R13*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R22*(-R11*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R13*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R23*(R11*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R12*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[11] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R13*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R32*(-R11*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R13*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R33*(R11*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R12*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[12] = -0.166666666666667*E*det_J*(R11*(-J_bar11*J_bar21*R22*(nu - 1.0) - J_bar11*J_bar31*R23*(nu - 1.0) - R21*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R12*(-J_bar11*J_bar21*R21*(nu - 1.0) - J_bar21*J_bar31*R23*(nu - 1.0) - R22*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R13*(-J_bar11*J_bar31*R21*(nu - 1.0) - J_bar21*J_bar31*R22*(nu - 1.0) - R23*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[13] = -0.166666666666667*E*det_J*(R21*(-J_bar11*J_bar21*R22*(nu - 1.0) - J_bar11*J_bar31*R23*(nu - 1.0) - R21*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R22*(-J_bar11*J_bar21*R21*(nu - 1.0) - J_bar21*J_bar31*R23*(nu - 1.0) - R22*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R23*(-J_bar11*J_bar31*R21*(nu - 1.0) - J_bar21*J_bar31*R22*(nu - 1.0) - R23*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[14] = -0.166666666666667*E*det_J*(R31*(-J_bar11*J_bar21*R22*(nu - 1.0) - J_bar11*J_bar31*R23*(nu - 1.0) - R21*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R32*(-J_bar11*J_bar21*R21*(nu - 1.0) - J_bar21*J_bar31*R23*(nu - 1.0) - R22*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R33*(-J_bar11*J_bar31*R21*(nu - 1.0) - J_bar21*J_bar31*R22*(nu - 1.0) - R23*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[15] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R23*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R12*(-R21*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R23*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R13*(R21*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[16] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R23*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R22*(-R21*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R23*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R23*(R21*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[17] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R23*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R32*(-R21*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R23*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R33*(R21*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[18] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R23*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R12*(-R21*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R23*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R13*(R21*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[19] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R23*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R22*(-R21*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R23*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R23*(R21*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[20] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R23*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R32*(-R21*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R23*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R33*(R21*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R22*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[21] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R23*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R12*(-R21*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R23*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R13*(R21*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R22*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[22] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R23*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R22*(-R21*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R23*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R23*(R21*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R22*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[23] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R23*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R32*(-R21*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R23*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R33*(R21*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R22*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[24] = -0.166666666666667*E*det_J*(R11*(-J_bar11*J_bar21*R32*(nu - 1.0) - J_bar11*J_bar31*R33*(nu - 1.0) - R31*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R12*(-J_bar11*J_bar21*R31*(nu - 1.0) - J_bar21*J_bar31*R33*(nu - 1.0) - R32*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R13*(-J_bar11*J_bar31*R31*(nu - 1.0) - J_bar21*J_bar31*R32*(nu - 1.0) - R33*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[25] = -0.166666666666667*E*det_J*(R21*(-J_bar11*J_bar21*R32*(nu - 1.0) - J_bar11*J_bar31*R33*(nu - 1.0) - R31*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R22*(-J_bar11*J_bar21*R31*(nu - 1.0) - J_bar21*J_bar31*R33*(nu - 1.0) - R32*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R23*(-J_bar11*J_bar31*R31*(nu - 1.0) - J_bar21*J_bar31*R32*(nu - 1.0) - R33*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[26] = -0.166666666666667*E*det_J*(R31*(-J_bar11*J_bar21*R32*(nu - 1.0) - J_bar11*J_bar31*R33*(nu - 1.0) - R31*(J_bar11*J_bar11*(nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R32*(-J_bar11*J_bar21*R31*(nu - 1.0) - J_bar21*J_bar31*R33*(nu - 1.0) - R32*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(nu - 1.0) + J_bar31*J_bar31*(2 * nu - 1.0))) + R33*(-J_bar11*J_bar31*R31*(nu - 1.0) - J_bar21*J_bar31*R32*(nu - 1.0) - R33*(J_bar11*J_bar11*(2 * nu - 1.0) + J_bar21*J_bar21*(2 * nu - 1.0) + J_bar31*J_bar31*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[27] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R33*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R12*(-R31*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R33*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R13*(R31*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[28] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R33*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R22*(-R31*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R33*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R23*(R31*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[29] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R33*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu)) + R32*(-R31*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R33*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu)) - R33*(R31*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[30] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R33*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R12*(-R31*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R33*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R13*(R31*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[31] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R33*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R22*(-R31*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R33*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R23*(R31*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[32] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R33*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu)) + R32*(-R31*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R33*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu)) - R33*(R31*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0)) + R32*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0)) - R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[33] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R33*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R12*(-R31*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R33*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R13*(R31*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R32*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[34] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R33*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R22*(-R31*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R33*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R23*(R31*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R32*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[35] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R33*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu)) + R32*(-R31*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R33*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu)) - R33*(R31*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0)) + R32*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0)) - R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[36] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R12*(R11*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R13*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R13*(R11*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R12*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[37] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R22*(R11*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R13*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R23*(R11*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R12*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[38] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R12*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R32*(R11*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R12*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R13*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R33*(R11*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R12*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R13*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[39] = -0.166666666666667*E*det_J*(R11*(-J_bar12*J_bar22*R12*(nu - 1.0) - J_bar12*J_bar32*R13*(nu - 1.0) - R11*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R12*(-J_bar12*J_bar22*R11*(nu - 1.0) - J_bar22*J_bar32*R13*(nu - 1.0) - R12*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R13*(-J_bar12*J_bar32*R11*(nu - 1.0) - J_bar22*J_bar32*R12*(nu - 1.0) - R13*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[40] = -0.166666666666667*E*det_J*(R21*(-J_bar12*J_bar22*R12*(nu - 1.0) - J_bar12*J_bar32*R13*(nu - 1.0) - R11*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R22*(-J_bar12*J_bar22*R11*(nu - 1.0) - J_bar22*J_bar32*R13*(nu - 1.0) - R12*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R23*(-J_bar12*J_bar32*R11*(nu - 1.0) - J_bar22*J_bar32*R12*(nu - 1.0) - R13*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[41] = -0.166666666666667*E*det_J*(R31*(-J_bar12*J_bar22*R12*(nu - 1.0) - J_bar12*J_bar32*R13*(nu - 1.0) - R11*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R32*(-J_bar12*J_bar22*R11*(nu - 1.0) - J_bar22*J_bar32*R13*(nu - 1.0) - R12*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R33*(-J_bar12*J_bar32*R11*(nu - 1.0) - J_bar22*J_bar32*R12*(nu - 1.0) - R13*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[42] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R13*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R12*(-R11*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R13*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R13*(R11*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R12*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[43] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R13*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R22*(-R11*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R13*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R23*(R11*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R12*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[44] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R13*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R32*(-R11*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R13*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R33*(R11*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R12*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[45] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R13*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R12*(-R11*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R13*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R13*(R11*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R12*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[46] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R13*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R22*(-R11*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R13*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R23*(R11*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R12*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[47] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R13*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R32*(-R11*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R13*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R33*(R11*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R12*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[48] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R12*(R21*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R23*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R13*(R21*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R22*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[49] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R22*(R21*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R23*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R23*(R21*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R22*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[50] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R22*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R32*(R21*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R22*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R23*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R33*(R21*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R22*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R23*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[51] = -0.166666666666667*E*det_J*(R11*(-J_bar12*J_bar22*R22*(nu - 1.0) - J_bar12*J_bar32*R23*(nu - 1.0) - R21*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R12*(-J_bar12*J_bar22*R21*(nu - 1.0) - J_bar22*J_bar32*R23*(nu - 1.0) - R22*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R13*(-J_bar12*J_bar32*R21*(nu - 1.0) - J_bar22*J_bar32*R22*(nu - 1.0) - R23*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[52] = -0.166666666666667*E*det_J*(R21*(-J_bar12*J_bar22*R22*(nu - 1.0) - J_bar12*J_bar32*R23*(nu - 1.0) - R21*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R22*(-J_bar12*J_bar22*R21*(nu - 1.0) - J_bar22*J_bar32*R23*(nu - 1.0) - R22*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R23*(-J_bar12*J_bar32*R21*(nu - 1.0) - J_bar22*J_bar32*R22*(nu - 1.0) - R23*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[53] = -0.166666666666667*E*det_J*(R31*(-J_bar12*J_bar22*R22*(nu - 1.0) - J_bar12*J_bar32*R23*(nu - 1.0) - R21*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R32*(-J_bar12*J_bar22*R21*(nu - 1.0) - J_bar22*J_bar32*R23*(nu - 1.0) - R22*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R33*(-J_bar12*J_bar32*R21*(nu - 1.0) - J_bar22*J_bar32*R22*(nu - 1.0) - R23*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[54] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R23*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R12*(-R21*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R23*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R13*(R21*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R22*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[55] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R23*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R22*(-R21*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R23*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R23*(R21*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R22*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[56] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R23*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R32*(-R21*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R23*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R33*(R21*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R22*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[57] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R23*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R12*(-R21*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R23*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R13*(R21*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R22*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[58] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R23*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R22*(-R21*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R23*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R23*(R21*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R22*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[59] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R23*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R32*(-R21*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R23*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R33*(R21*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R22*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[60] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R12*(R31*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R33*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R13*(R31*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R32*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[61] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R22*(R31*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R33*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R23*(R31*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R32*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[62] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar11*J_bar12*(nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) + R32*(J_bar11*J_bar22*nu - J_bar12*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar32*nu - J_bar12*J_bar31*(2 * nu - 1.0))) + R32*(R31*(J_bar11*J_bar22*(2 * nu - 1.0) - J_bar12*J_bar21*nu) + R32*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(nu - 1.0) + J_bar31*J_bar32*(2 * nu - 1.0)) - R33*(J_bar21*J_bar32*nu - J_bar22*J_bar31*(2 * nu - 1.0))) + R33*(R31*(J_bar11*J_bar32*(2 * nu - 1.0) - J_bar12*J_bar31*nu) + R32*(J_bar21*J_bar32*(2 * nu - 1.0) - J_bar22*J_bar31*nu) + R33*(J_bar11*J_bar12*(2 * nu - 1.0) + J_bar21*J_bar22*(2 * nu - 1.0) + J_bar31*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[63] = -0.166666666666667*E*det_J*(R11*(-J_bar12*J_bar22*R32*(nu - 1.0) - J_bar12*J_bar32*R33*(nu - 1.0) - R31*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R12*(-J_bar12*J_bar22*R31*(nu - 1.0) - J_bar22*J_bar32*R33*(nu - 1.0) - R32*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R13*(-J_bar12*J_bar32*R31*(nu - 1.0) - J_bar22*J_bar32*R32*(nu - 1.0) - R33*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[64] = -0.166666666666667*E*det_J*(R21*(-J_bar12*J_bar22*R32*(nu - 1.0) - J_bar12*J_bar32*R33*(nu - 1.0) - R31*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R22*(-J_bar12*J_bar22*R31*(nu - 1.0) - J_bar22*J_bar32*R33*(nu - 1.0) - R32*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R23*(-J_bar12*J_bar32*R31*(nu - 1.0) - J_bar22*J_bar32*R32*(nu - 1.0) - R33*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[65] = -0.166666666666667*E*det_J*(R31*(-J_bar12*J_bar22*R32*(nu - 1.0) - J_bar12*J_bar32*R33*(nu - 1.0) - R31*(J_bar12*J_bar12*(nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R32*(-J_bar12*J_bar22*R31*(nu - 1.0) - J_bar22*J_bar32*R33*(nu - 1.0) - R32*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(nu - 1.0) + J_bar32*J_bar32*(2 * nu - 1.0))) + R33*(-J_bar12*J_bar32*R31*(nu - 1.0) - J_bar22*J_bar32*R32*(nu - 1.0) - R33*(J_bar12*J_bar12*(2 * nu - 1.0) + J_bar22*J_bar22*(2 * nu - 1.0) + J_bar32*J_bar32*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[66] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R33*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R12*(-R31*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R33*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R13*(R31*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R32*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[67] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R33*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R22*(-R31*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R33*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R23*(R31*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R32*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[68] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R33*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu)) + R32*(-R31*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R33*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu)) - R33*(R31*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0)) + R32*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0)) - R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[69] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R33*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R12*(-R31*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R33*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R13*(R31*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R32*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[70] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R33*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R22*(-R31*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R33*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R23*(R31*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R32*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[71] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R33*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu)) + R32*(-R31*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R33*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu)) - R33*(R31*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0)) + R32*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0)) - R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[72] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R12*(R11*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R13*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R13*(R11*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R12*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[73] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R22*(R11*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R13*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R23*(R11*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R12*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[74] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R12*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R13*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R32*(R11*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R12*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R13*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R33*(R11*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R12*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R13*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[75] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R13*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R12*(R11*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R13*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R13*(R11*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R12*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[76] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R13*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R22*(R11*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R13*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R23*(R11*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R12*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[77] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R12*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R13*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R32*(R11*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R12*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R13*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R33*(R11*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R12*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R13*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[78] = -0.166666666666667*E*det_J*(R11*(-J_bar13*J_bar23*R12*(nu - 1.0) - J_bar13*J_bar33*R13*(nu - 1.0) - R11*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R12*(-J_bar13*J_bar23*R11*(nu - 1.0) - J_bar23*J_bar33*R13*(nu - 1.0) - R12*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R13*(-J_bar13*J_bar33*R11*(nu - 1.0) - J_bar23*J_bar33*R12*(nu - 1.0) - R13*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[79] = -0.166666666666667*E*det_J*(R21*(-J_bar13*J_bar23*R12*(nu - 1.0) - J_bar13*J_bar33*R13*(nu - 1.0) - R11*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R22*(-J_bar13*J_bar23*R11*(nu - 1.0) - J_bar23*J_bar33*R13*(nu - 1.0) - R12*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R23*(-J_bar13*J_bar33*R11*(nu - 1.0) - J_bar23*J_bar33*R12*(nu - 1.0) - R13*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[80] = -0.166666666666667*E*det_J*(R31*(-J_bar13*J_bar23*R12*(nu - 1.0) - J_bar13*J_bar33*R13*(nu - 1.0) - R11*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R32*(-J_bar13*J_bar23*R11*(nu - 1.0) - J_bar23*J_bar33*R13*(nu - 1.0) - R12*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R33*(-J_bar13*J_bar33*R11*(nu - 1.0) - J_bar23*J_bar33*R12*(nu - 1.0) - R13*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[81] = 0.166666666666667*E*det_J*(R11*(R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R13*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R12*(-R11*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R13*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R13*(R11*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R12*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[82] = 0.166666666666667*E*det_J*(R21*(R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R13*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R22*(-R11*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R13*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R23*(R11*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R12*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[83] = 0.166666666666667*E*det_J*(R31*(R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R13*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R32*(-R11*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R13*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R33*(R11*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R12*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[84] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R12*(R21*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R23*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R13*(R21*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R22*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[85] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R22*(R21*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R23*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R23*(R21*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R22*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[86] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R22*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R23*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R32*(R21*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R22*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R23*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R33*(R21*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R22*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R23*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[87] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R23*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R12*(R21*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R23*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R13*(R21*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R22*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[88] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R23*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R22*(R21*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R23*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R23*(R21*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R22*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[89] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R22*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R23*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R32*(R21*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R22*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R23*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R33*(R21*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R22*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R23*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[90] = -0.166666666666667*E*det_J*(R11*(-J_bar13*J_bar23*R22*(nu - 1.0) - J_bar13*J_bar33*R23*(nu - 1.0) - R21*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R12*(-J_bar13*J_bar23*R21*(nu - 1.0) - J_bar23*J_bar33*R23*(nu - 1.0) - R22*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R13*(-J_bar13*J_bar33*R21*(nu - 1.0) - J_bar23*J_bar33*R22*(nu - 1.0) - R23*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[91] = -0.166666666666667*E*det_J*(R21*(-J_bar13*J_bar23*R22*(nu - 1.0) - J_bar13*J_bar33*R23*(nu - 1.0) - R21*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R22*(-J_bar13*J_bar23*R21*(nu - 1.0) - J_bar23*J_bar33*R23*(nu - 1.0) - R22*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R23*(-J_bar13*J_bar33*R21*(nu - 1.0) - J_bar23*J_bar33*R22*(nu - 1.0) - R23*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[92] = -0.166666666666667*E*det_J*(R31*(-J_bar13*J_bar23*R22*(nu - 1.0) - J_bar13*J_bar33*R23*(nu - 1.0) - R21*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R32*(-J_bar13*J_bar23*R21*(nu - 1.0) - J_bar23*J_bar33*R23*(nu - 1.0) - R22*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R33*(-J_bar13*J_bar33*R21*(nu - 1.0) - J_bar23*J_bar33*R22*(nu - 1.0) - R23*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[93] = 0.166666666666667*E*det_J*(R11*(R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R23*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R12*(-R21*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R23*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R13*(R21*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R22*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[94] = 0.166666666666667*E*det_J*(R21*(R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R23*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R22*(-R21*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R23*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R23*(R21*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R22*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[95] = 0.166666666666667*E*det_J*(R31*(R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R23*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R32*(-R21*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R23*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R33*(R21*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R22*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[96] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R12*(R31*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R33*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R13*(R31*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R32*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[97] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R22*(R31*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R33*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R23*(R31*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R32*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[98] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar11*J_bar13*(nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) + R32*(J_bar11*J_bar23*nu - J_bar13*J_bar21*(2 * nu - 1.0)) + R33*(J_bar11*J_bar33*nu - J_bar13*J_bar31*(2 * nu - 1.0))) + R32*(R31*(J_bar11*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar21*nu) + R32*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(nu - 1.0) + J_bar31*J_bar33*(2 * nu - 1.0)) - R33*(J_bar21*J_bar33*nu - J_bar23*J_bar31*(2 * nu - 1.0))) + R33*(R31*(J_bar11*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar31*nu) + R32*(J_bar21*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar31*nu) + R33*(J_bar11*J_bar13*(2 * nu - 1.0) + J_bar21*J_bar23*(2 * nu - 1.0) + J_bar31*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[99] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R33*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R12*(R31*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R33*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R13*(R31*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R32*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[100] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R33*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R22*(R31*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R33*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R23*(R31*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R32*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[101] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar12*J_bar13*(nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) + R32*(J_bar12*J_bar23*nu - J_bar13*J_bar22*(2 * nu - 1.0)) + R33*(J_bar12*J_bar33*nu - J_bar13*J_bar32*(2 * nu - 1.0))) + R32*(R31*(J_bar12*J_bar23*(2 * nu - 1.0) - J_bar13*J_bar22*nu) + R32*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(nu - 1.0) + J_bar32*J_bar33*(2 * nu - 1.0)) - R33*(J_bar22*J_bar33*nu - J_bar23*J_bar32*(2 * nu - 1.0))) + R33*(R31*(J_bar12*J_bar33*(2 * nu - 1.0) - J_bar13*J_bar32*nu) + R32*(J_bar22*J_bar33*(2 * nu - 1.0) - J_bar23*J_bar32*nu) + R33*(J_bar12*J_bar13*(2 * nu - 1.0) + J_bar22*J_bar23*(2 * nu - 1.0) + J_bar32*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[102] = -0.166666666666667*E*det_J*(R11*(-J_bar13*J_bar23*R32*(nu - 1.0) - J_bar13*J_bar33*R33*(nu - 1.0) - R31*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R12*(-J_bar13*J_bar23*R31*(nu - 1.0) - J_bar23*J_bar33*R33*(nu - 1.0) - R32*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R13*(-J_bar13*J_bar33*R31*(nu - 1.0) - J_bar23*J_bar33*R32*(nu - 1.0) - R33*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[103] = -0.166666666666667*E*det_J*(R21*(-J_bar13*J_bar23*R32*(nu - 1.0) - J_bar13*J_bar33*R33*(nu - 1.0) - R31*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R22*(-J_bar13*J_bar23*R31*(nu - 1.0) - J_bar23*J_bar33*R33*(nu - 1.0) - R32*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R23*(-J_bar13*J_bar33*R31*(nu - 1.0) - J_bar23*J_bar33*R32*(nu - 1.0) - R33*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[104] = -0.166666666666667*E*det_J*(R31*(-J_bar13*J_bar23*R32*(nu - 1.0) - J_bar13*J_bar33*R33*(nu - 1.0) - R31*(J_bar13*J_bar13*(nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R32*(-J_bar13*J_bar23*R31*(nu - 1.0) - J_bar23*J_bar33*R33*(nu - 1.0) - R32*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(nu - 1.0) + J_bar33*J_bar33*(2 * nu - 1.0))) + R33*(-J_bar13*J_bar33*R31*(nu - 1.0) - J_bar23*J_bar33*R32*(nu - 1.0) - R33*(J_bar13*J_bar13*(2 * nu - 1.0) + J_bar23*J_bar23*(2 * nu - 1.0) + J_bar33*J_bar33*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[105] = 0.166666666666667*E*det_J*(R11*(R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R33*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R12*(-R31*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R33*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R13*(R31*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R32*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[106] = 0.166666666666667*E*det_J*(R21*(R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R33*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R22*(-R31*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R33*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R23*(R31*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R32*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[107] = 0.166666666666667*E*det_J*(R31*(R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R33*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu)) + R32*(-R31*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R33*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu)) - R33*(R31*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0)) + R32*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0)) - R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[108] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R13*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R12*(R11*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R13*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R13*(R11*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R12*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[109] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R13*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R22*(R11*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R13*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R23*(R11*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R12*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[110] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R12*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R13*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R32*(R11*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R12*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R13*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R33*(R11*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R12*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R13*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[111] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R13*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R12*(R11*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R13*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R13*(R11*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R12*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[112] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R13*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R22*(R11*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R13*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R23*(R11*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R12*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[113] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R12*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R13*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R32*(R11*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R12*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R13*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R33*(R11*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R12*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R13*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[114] = 0.166666666666667*E*det_J*(-R11*(-R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R13*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R12*(R11*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R13*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R13*(R11*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R12*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[115] = 0.166666666666667*E*det_J*(-R21*(-R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R13*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R22*(R11*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R13*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R23*(R11*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R12*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[116] = 0.166666666666667*E*det_J*(-R31*(-R11*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R12*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R13*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R32*(R11*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R12*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R13*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R33*(R11*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R12*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R13*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[117] = -0.166666666666667*E*det_J*(R11*(-J_star1*J_star2*R12*(nu - 1.0) - J_star1*J_star3*R13*(nu - 1.0) - R11*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R12*(-J_star1*J_star2*R11*(nu - 1.0) - J_star2*J_star3*R13*(nu - 1.0) - R12*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R13*(-J_star1*J_star3*R11*(nu - 1.0) - J_star2*J_star3*R12*(nu - 1.0) - R13*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[118] = -0.166666666666667*E*det_J*(R21*(-J_star1*J_star2*R12*(nu - 1.0) - J_star1*J_star3*R13*(nu - 1.0) - R11*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R22*(-J_star1*J_star2*R11*(nu - 1.0) - J_star2*J_star3*R13*(nu - 1.0) - R12*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R23*(-J_star1*J_star3*R11*(nu - 1.0) - J_star2*J_star3*R12*(nu - 1.0) - R13*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[119] = -0.166666666666667*E*det_J*(R31*(-J_star1*J_star2*R12*(nu - 1.0) - J_star1*J_star3*R13*(nu - 1.0) - R11*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R32*(-J_star1*J_star2*R11*(nu - 1.0) - J_star2*J_star3*R13*(nu - 1.0) - R12*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R33*(-J_star1*J_star3*R11*(nu - 1.0) - J_star2*J_star3*R12*(nu - 1.0) - R13*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[120] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R23*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R12*(R21*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R23*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R13*(R21*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R22*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[121] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R23*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R22*(R21*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R23*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R23*(R21*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R22*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[122] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R22*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R23*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R32*(R21*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R22*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R23*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R33*(R21*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R22*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R23*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[123] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R23*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R12*(R21*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R23*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R13*(R21*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R22*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[124] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R23*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R22*(R21*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R23*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R23*(R21*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R22*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[125] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R22*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R23*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R32*(R21*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R22*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R23*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R33*(R21*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R22*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R23*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[126] = 0.166666666666667*E*det_J*(-R11*(-R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R23*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R12*(R21*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R23*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R13*(R21*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R22*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[127] = 0.166666666666667*E*det_J*(-R21*(-R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R23*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R22*(R21*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R23*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R23*(R21*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R22*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[128] = 0.166666666666667*E*det_J*(-R31*(-R21*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R22*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R23*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R32*(R21*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R22*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R23*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R33*(R21*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R22*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R23*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[129] = -0.166666666666667*E*det_J*(R11*(-J_star1*J_star2*R22*(nu - 1.0) - J_star1*J_star3*R23*(nu - 1.0) - R21*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R12*(-J_star1*J_star2*R21*(nu - 1.0) - J_star2*J_star3*R23*(nu - 1.0) - R22*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R13*(-J_star1*J_star3*R21*(nu - 1.0) - J_star2*J_star3*R22*(nu - 1.0) - R23*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[130] = -0.166666666666667*E*det_J*(R21*(-J_star1*J_star2*R22*(nu - 1.0) - J_star1*J_star3*R23*(nu - 1.0) - R21*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R22*(-J_star1*J_star2*R21*(nu - 1.0) - J_star2*J_star3*R23*(nu - 1.0) - R22*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R23*(-J_star1*J_star3*R21*(nu - 1.0) - J_star2*J_star3*R22*(nu - 1.0) - R23*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[131] = -0.166666666666667*E*det_J*(R31*(-J_star1*J_star2*R22*(nu - 1.0) - J_star1*J_star3*R23*(nu - 1.0) - R21*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R32*(-J_star1*J_star2*R21*(nu - 1.0) - J_star2*J_star3*R23*(nu - 1.0) - R22*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R33*(-J_star1*J_star3*R21*(nu - 1.0) - J_star2*J_star3*R22*(nu - 1.0) - R23*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[132] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R33*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R12*(R31*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R33*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R13*(R31*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R32*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[133] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R33*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R22*(R31*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R33*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R23*(R31*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R32*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[134] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar11*J_star1*(nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) + R32*(J_bar11*J_star2*nu - J_bar21*J_star1*(2 * nu - 1.0)) + R33*(J_bar11*J_star3*nu - J_bar31*J_star1*(2 * nu - 1.0))) + R32*(R31*(J_bar11*J_star2*(2 * nu - 1.0) - J_bar21*J_star1*nu) + R32*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(nu - 1.0) + J_bar31*J_star3*(2 * nu - 1.0)) - R33*(J_bar21*J_star3*nu - J_bar31*J_star2*(2 * nu - 1.0))) + R33*(R31*(J_bar11*J_star3*(2 * nu - 1.0) - J_bar31*J_star1*nu) + R32*(J_bar21*J_star3*(2 * nu - 1.0) - J_bar31*J_star2*nu) + R33*(J_bar11*J_star1*(2 * nu - 1.0) + J_bar21*J_star2*(2 * nu - 1.0) + J_bar31*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[135] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R33*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R12*(R31*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R33*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R13*(R31*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R32*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[136] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R33*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R22*(R31*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R33*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R23*(R31*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R32*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[137] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar12*J_star1*(nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) + R32*(J_bar12*J_star2*nu - J_bar22*J_star1*(2 * nu - 1.0)) + R33*(J_bar12*J_star3*nu - J_bar32*J_star1*(2 * nu - 1.0))) + R32*(R31*(J_bar12*J_star2*(2 * nu - 1.0) - J_bar22*J_star1*nu) + R32*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(nu - 1.0) + J_bar32*J_star3*(2 * nu - 1.0)) - R33*(J_bar22*J_star3*nu - J_bar32*J_star2*(2 * nu - 1.0))) + R33*(R31*(J_bar12*J_star3*(2 * nu - 1.0) - J_bar32*J_star1*nu) + R32*(J_bar22*J_star3*(2 * nu - 1.0) - J_bar32*J_star2*nu) + R33*(J_bar12*J_star1*(2 * nu - 1.0) + J_bar22*J_star2*(2 * nu - 1.0) + J_bar32*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[138] = 0.166666666666667*E*det_J*(-R11*(-R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R33*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R12*(R31*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R33*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R13*(R31*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R32*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[139] = 0.166666666666667*E*det_J*(-R21*(-R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R33*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R22*(R31*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R33*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R23*(R31*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R32*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[140] = 0.166666666666667*E*det_J*(-R31*(-R31*(J_bar13*J_star1*(nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) + R32*(J_bar13*J_star2*nu - J_bar23*J_star1*(2 * nu - 1.0)) + R33*(J_bar13*J_star3*nu - J_bar33*J_star1*(2 * nu - 1.0))) + R32*(R31*(J_bar13*J_star2*(2 * nu - 1.0) - J_bar23*J_star1*nu) + R32*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(nu - 1.0) + J_bar33*J_star3*(2 * nu - 1.0)) - R33*(J_bar23*J_star3*nu - J_bar33*J_star2*(2 * nu - 1.0))) + R33*(R31*(J_bar13*J_star3*(2 * nu - 1.0) - J_bar33*J_star1*nu) + R32*(J_bar23*J_star3*(2 * nu - 1.0) - J_bar33*J_star2*nu) + R33*(J_bar13*J_star1*(2 * nu - 1.0) + J_bar23*J_star2*(2 * nu - 1.0) + J_bar33*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[141] = -0.166666666666667*E*det_J*(R11*(-J_star1*J_star2*R32*(nu - 1.0) - J_star1*J_star3*R33*(nu - 1.0) - R31*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R12*(-J_star1*J_star2*R31*(nu - 1.0) - J_star2*J_star3*R33*(nu - 1.0) - R32*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R13*(-J_star1*J_star3*R31*(nu - 1.0) - J_star2*J_star3*R32*(nu - 1.0) - R33*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[142] = -0.166666666666667*E*det_J*(R21*(-J_star1*J_star2*R32*(nu - 1.0) - J_star1*J_star3*R33*(nu - 1.0) - R31*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R22*(-J_star1*J_star2*R31*(nu - 1.0) - J_star2*J_star3*R33*(nu - 1.0) - R32*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R23*(-J_star1*J_star3*R31*(nu - 1.0) - J_star2*J_star3*R32*(nu - 1.0) - R33*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);
	in_element->local_K[143] = -0.166666666666667*E*det_J*(R31*(-J_star1*J_star2*R32*(nu - 1.0) - J_star1*J_star3*R33*(nu - 1.0) - R31*(J_star1*J_star1*(nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R32*(-J_star1*J_star2*R31*(nu - 1.0) - J_star2*J_star3*R33*(nu - 1.0) - R32*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(nu - 1.0) + J_star3*J_star3*(2 * nu - 1.0))) + R33*(-J_star1*J_star3*R31*(nu - 1.0) - J_star2*J_star3*R32*(nu - 1.0) - R33*(J_star1*J_star1*(2 * nu - 1.0) + J_star2*J_star2*(2 * nu - 1.0) + J_star3*J_star3*(nu - 1.0)))) / (2 * nu*nu + nu - 1);



	//Section of code is for R * K
	/*in_element->local_RK[0] = R11*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[1] = R11*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[2] = R11*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[3] = R11*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[4] = R11*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[5] = R11*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[6] = R11*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[7] = R11*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[8] = R11*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[9] = R11*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[10] = R11*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[11] = R11*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[12] = R21*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[13] = R21*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[14] = R21*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[15] = R21*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[16] = R21*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[17] = R21*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[18] = R21*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[19] = R21*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[20] = R21*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[21] = R21*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[22] = R21*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[23] = R21*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[24] = R31*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[25] = R31*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[26] = R31*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[27] = R31*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[28] = R31*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[29] = R31*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[30] = R31*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[31] = R31*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[32] = R31*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[33] = R31*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[34] = R31*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[35] = R31*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[36] = R11*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[37] = R11*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[38] = R11*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[39] = R11*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[40] = R11*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[41] = R11*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[42] = R11*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[43] = R11*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[44] = R11*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[45] = R11*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[46] = R11*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[47] = R11*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[48] = R21*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[49] = R21*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[50] = R21*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[51] = R21*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[52] = R21*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[53] = R21*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[54] = R21*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[55] = R21*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[56] = R21*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[57] = R21*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[58] = R21*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[59] = R21*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[60] = R31*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[61] = R31*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[62] = R31*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[63] = R31*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[64] = R31*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[65] = R31*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[66] = R31*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[67] = R31*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[68] = R31*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[69] = R31*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[70] = R31*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[71] = R31*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[72] = R11*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[73] = R11*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[74] = R11*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[75] = R11*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[76] = R11*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[77] = R11*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[78] = R11*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[79] = R11*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[80] = R11*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[81] = R11*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[82] = R11*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[83] = R11*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[84] = R21*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[85] = R21*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[86] = R21*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[87] = R21*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[88] = R21*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[89] = R21*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[90] = R21*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[91] = R21*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[92] = R21*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[93] = R21*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[94] = R21*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[95] = R21*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[96] = R31*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[97] = R31*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[98] = R31*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[99] = R31*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[100] = R31*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[101] = R31*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[102] = R31*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[103] = R31*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[104] = R31*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[105] = R31*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[106] = R31*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1));
	in_element->local_RK[107] = R31*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[108] = R11*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[109] = R11*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[110] = R11*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[111] = R11*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[112] = R11*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[113] = R11*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[114] = R11*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[115] = R11*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[116] = R11*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[117] = R11*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[118] = R11*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[119] = R11*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[120] = R21*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[121] = R21*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[122] = R21*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[123] = R21*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[124] = R21*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[125] = R21*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[126] = R21*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[127] = R21*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[128] = R21*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[129] = R21*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[130] = R21*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[131] = R21*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[132] = R31*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[133] = R31*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[134] = R31*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[135] = R31*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[136] = R31*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[137] = R31*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[138] = R31*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[139] = R31*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[140] = R31*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[141] = R31*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[142] = R31*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1));
	in_element->local_RK[143] = R31*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1));
*/
in_element->local_RKx[0] = k1.x*(R11*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R11*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R11*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R11*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.y*(R11*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.z*(R11*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R11*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R11*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R11*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R11*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R11*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R11*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[1] = k1.x*(R21*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R21*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R21*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R21*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.y*(R21*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.z*(R21*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R21*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R21*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R21*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R21*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R21*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R21*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[2] = k1.x*(R31*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R31*(0.166666666666667*E*J_bar11*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R31*(0.166666666666667*E*J_bar11*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar11*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar11*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar31*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R31*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.y*(R31*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k2.z*(R31*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R31*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R31*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R31*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R31*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R31*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R31*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[3] = k1.x*(R11*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R11*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R11*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R11*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R11*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R11*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R11*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R11*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R11*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R11*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R11*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R11*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[4] = k1.x*(R21*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R21*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R21*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R21*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R21*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R21*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R21*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R21*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R21*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R21*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R21*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R21*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[5] = k1.x*(R31*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R31*(0.166666666666667*E*J_bar11*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R31*(0.166666666666667*E*J_bar11*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R31*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R31*(0.166666666666667*E*J_bar12*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R31*(0.166666666666667*E*J_bar12*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar12*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar12*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar32*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R31*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.y*(R31*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1))) + k3.z*(R31*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R31*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R31*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R31*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[6] = k1.x*(R11*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R11*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R11*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R11*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R11*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R11*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R11*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R11*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R11*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R11*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R11*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R11*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[7] = k1.x*(R21*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R21*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R21*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R21*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R21*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R21*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R21*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R21*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R21*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R21*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R21*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R21*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[8] = k1.x*(R31*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R31*(0.166666666666667*E*J_bar11*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar21*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R31*(0.166666666666667*E*J_bar11*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar31*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R31*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R31*(0.166666666666667*E*J_bar12*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar22*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R31*(0.166666666666667*E*J_bar12*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar32*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R31*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R31*(0.166666666666667*E*J_bar13*J_bar23*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R31*(0.166666666666667*E*J_bar13*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar13*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_bar33*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar33*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_bar13*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_bar23*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_bar33*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R31*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.y*(R31*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1))) + k4.z*(R31*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[9] = k1.x*(R11*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R11*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R11*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R11*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R11*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R11*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R11*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R11*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R11*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R11*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.y*(R11*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.z*(R11*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R12*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R13*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[10] = k1.x*(R21*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R21*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R21*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R21*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R21*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R21*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R21*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R21*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R21*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R21*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.y*(R21*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.z*(R21*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R22*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R23*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));
in_element->local_RKx[11] = k1.x*(R31*(0.166666666666667*E*J_bar11*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.y*(R31*(0.166666666666667*E*J_bar11*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar21*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k1.z*(R31*(0.166666666666667*E*J_bar11*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar21*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar11*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar21*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar31*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.x*(R31*(0.166666666666667*E*J_bar12*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.y*(R31*(0.166666666666667*E*J_bar12*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar22*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k2.z*(R31*(0.166666666666667*E*J_bar12*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar22*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar12*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar22*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar32*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.x*(R31*(0.166666666666667*E*J_bar13*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.y*(R31*(0.166666666666667*E*J_bar13*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar23*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k3.z*(R31*(0.166666666666667*E*J_bar13*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star1*det_J*nu / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_bar23*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star2*det_J*nu / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_bar13*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar23*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_bar33*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.x*(R31*(0.166666666666667*E*J_star1*J_star1*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.y*(R31*(0.166666666666667*E*J_star1*J_star2*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1))) + k4.z*(R31*(0.166666666666667*E*J_star1*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star1*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R32*(0.166666666666667*E*J_star2*J_star3*det_J*nu / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star3*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1)) + R33*(0.166666666666667*E*J_star1*J_star1*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star2*J_star2*det_J*(-2 * nu + 1.0) / (-2 * nu*nu - nu + 1) + 0.166666666666667*E*J_star3*J_star3*det_J*(-nu + 1.0) / (-2 * nu*nu - nu + 1)));

	in_element->local_M[0] = det_J*rho / 3;
	in_element->local_M[1] = 0.0;
	in_element->local_M[2] = 0.0;
	in_element->local_M[3] = det_J*rho / 4;
	in_element->local_M[4] = 0.0;
	in_element->local_M[5] = 0.0;
	in_element->local_M[6] = det_J*rho / 4;
	in_element->local_M[7] = 0.0;
	in_element->local_M[8] = 0.0;
	in_element->local_M[9] = -det_J*rho / 3;
	in_element->local_M[10] = 0.0;
	in_element->local_M[11] = 0.0;
	in_element->local_M[12] = 0.0;
	in_element->local_M[13] = det_J*rho / 3;
	in_element->local_M[14] = 0.0;
	in_element->local_M[15] = 0.0;
	in_element->local_M[16] = det_J*rho / 4;
	in_element->local_M[17] = 0.0;
	in_element->local_M[18] = 0.0;
	in_element->local_M[19] = det_J*rho / 4;
	in_element->local_M[20] = 0.0;
	in_element->local_M[21] = 0.0;
	in_element->local_M[22] = -det_J*rho / 3;
	in_element->local_M[23] = 0.0;
	in_element->local_M[24] = 0.0;
	in_element->local_M[25] = 0.0;
	in_element->local_M[26] = det_J*rho / 3;
	in_element->local_M[27] = 0.0;
	in_element->local_M[28] = 0.0;
	in_element->local_M[29] = det_J*rho / 4;
	in_element->local_M[30] = 0.0;
	in_element->local_M[31] = 0.0;
	in_element->local_M[32] = det_J*rho / 4;
	in_element->local_M[33] = 0.0;
	in_element->local_M[34] = 0.0;
	in_element->local_M[35] = -det_J*rho / 3;
	in_element->local_M[36] = det_J*rho / 4;
	in_element->local_M[37] = 0.0;
	in_element->local_M[38] = 0.0;
	in_element->local_M[39] = det_J*rho / 3;
	in_element->local_M[40] = 0.0;
	in_element->local_M[41] = 0.0;
	in_element->local_M[42] = det_J*rho / 4;
	in_element->local_M[43] = 0.0;
	in_element->local_M[44] = 0.0;
	in_element->local_M[45] = -det_J*rho / 3;
	in_element->local_M[46] = 0.0;
	in_element->local_M[47] = 0.0;
	in_element->local_M[48] = 0.0;
	in_element->local_M[49] = det_J*rho / 4;
	in_element->local_M[50] = 0.0;
	in_element->local_M[51] = 0.0;
	in_element->local_M[52] = det_J*rho / 3;
	in_element->local_M[53] = 0.0;
	in_element->local_M[54] = 0.0;
	in_element->local_M[55] = det_J*rho / 4;
	in_element->local_M[56] = 0.0;
	in_element->local_M[57] = 0.0;
	in_element->local_M[58] = -det_J*rho / 3;
	in_element->local_M[59] = 0.0;
	in_element->local_M[60] = 0.0;
	in_element->local_M[61] = 0.0;
	in_element->local_M[62] = det_J*rho / 4;
	in_element->local_M[63] = 0.0;
	in_element->local_M[64] = 0.0;
	in_element->local_M[65] = det_J*rho / 3;
	in_element->local_M[66] = 0.0;
	in_element->local_M[67] = 0.0;
	in_element->local_M[68] = det_J*rho / 4;
	in_element->local_M[69] = 0.0;
	in_element->local_M[70] = 0.0;
	in_element->local_M[71] = -det_J*rho / 3;
	in_element->local_M[72] = det_J*rho / 4;
	in_element->local_M[73] = 0.0;
	in_element->local_M[74] = 0.0;
	in_element->local_M[75] = det_J*rho / 4;
	in_element->local_M[76] = 0.0;
	in_element->local_M[77] = 0.0;
	in_element->local_M[78] = det_J*rho / 3;
	in_element->local_M[79] = 0.0;
	in_element->local_M[80] = 0.0;
	in_element->local_M[81] = -det_J*rho / 3;
	in_element->local_M[82] = 0.0;
	in_element->local_M[83] = 0.0;
	in_element->local_M[84] = 0.0;
	in_element->local_M[85] = det_J*rho / 4;
	in_element->local_M[86] = 0.0;
	in_element->local_M[87] = 0.0;
	in_element->local_M[88] = det_J*rho / 4;
	in_element->local_M[89] = 0.0;
	in_element->local_M[90] = 0.0;
	in_element->local_M[91] = det_J*rho / 3;
	in_element->local_M[92] = 0.0;
	in_element->local_M[93] = 0.0;
	in_element->local_M[94] = -det_J*rho / 3;
	in_element->local_M[95] = 0.0;
	in_element->local_M[96] = 0.0;
	in_element->local_M[97] = 0.0;
	in_element->local_M[98] = det_J*rho / 4;
	in_element->local_M[99] = 0.0;
	in_element->local_M[100] = 0.0;
	in_element->local_M[101] = det_J*rho / 4;
	in_element->local_M[102] = 0.0;
	in_element->local_M[103] = 0.0;
	in_element->local_M[104] = det_J*rho / 3;
	in_element->local_M[105] = 0.0;
	in_element->local_M[106] = 0.0;
	in_element->local_M[107] = -det_J*rho / 3;
	in_element->local_M[108] = -det_J*rho / 3;
	in_element->local_M[109] = 0.0;
	in_element->local_M[110] = 0.0;
	in_element->local_M[111] = -det_J*rho / 3;
	in_element->local_M[112] = 0.0;
	in_element->local_M[113] = 0.0;
	in_element->local_M[114] = -det_J*rho / 3;
	in_element->local_M[115] = 0.0;
	in_element->local_M[116] = 0.0;
	in_element->local_M[117] = det_J*rho / 2;
	in_element->local_M[118] = 0.0;
	in_element->local_M[119] = 0.0;
	in_element->local_M[120] = 0.0;
	in_element->local_M[121] = -det_J*rho / 3;
	in_element->local_M[122] = 0.0;
	in_element->local_M[123] = 0.0;
	in_element->local_M[124] = -det_J*rho / 3;
	in_element->local_M[125] = 0.0;
	in_element->local_M[126] = 0.0;
	in_element->local_M[127] = -det_J*rho / 3;
	in_element->local_M[128] = 0.0;
	in_element->local_M[129] = 0.0;
	in_element->local_M[130] = det_J*rho / 2;
	in_element->local_M[131] = 0.0;
	in_element->local_M[132] = 0.0;
	in_element->local_M[133] = 0.0;
	in_element->local_M[134] = -det_J*rho / 3;
	in_element->local_M[135] = 0.0;
	in_element->local_M[136] = 0.0;
	in_element->local_M[137] = -det_J*rho / 3;
	in_element->local_M[138] = 0.0;
	in_element->local_M[139] = 0.0;
	in_element->local_M[140] = -det_J*rho / 3;
	in_element->local_M[141] = 0.0;
	in_element->local_M[142] = 0.0;
	in_element->local_M[143] = det_J*rho / 2;


//in_element->local_M[0] = 0.166666666666667*det_J*(J_bar11*J_bar11*rho + J_bar21*J_bar21*rho + J_bar31*J_bar31*rho);
//in_element->local_M[1] = 0.166666666666667*J_bar11*J_bar21*det_J*rho;
//in_element->local_M[2] = 0.166666666666667*J_bar11*J_bar31*det_J*rho;
//in_element->local_M[3] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[4] = 0.166666666666667*J_bar12*J_bar21*det_J*rho;
//in_element->local_M[5] = 0.166666666666667*J_bar12*J_bar31*det_J*rho;
//in_element->local_M[6] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[7] = 0.166666666666667*J_bar13*J_bar21*det_J*rho;
//in_element->local_M[8] = 0.166666666666667*J_bar13*J_bar31*det_J*rho;
//in_element->local_M[9] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[10] = 0.166666666666667*J_bar21*J_star1*det_J*rho;
//in_element->local_M[11] = 0.166666666666667*J_bar31*J_star1*det_J*rho;
//in_element->local_M[12] = 0.166666666666667*J_bar11*J_bar21*det_J*rho;
//in_element->local_M[13] = 0.166666666666667*det_J*(J_bar11*J_bar11*rho + J_bar21*J_bar21*rho + J_bar31*J_bar31*rho);
//in_element->local_M[14] = 0.166666666666667*J_bar21*J_bar31*det_J*rho;
//in_element->local_M[15] = 0.166666666666667*J_bar11*J_bar22*det_J*rho;
//in_element->local_M[16] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[17] = 0.166666666666667*J_bar22*J_bar31*det_J*rho;
//in_element->local_M[18] = 0.166666666666667*J_bar11*J_bar23*det_J*rho;
//in_element->local_M[19] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[20] = 0.166666666666667*J_bar23*J_bar31*det_J*rho;
//in_element->local_M[21] = 0.166666666666667*J_bar11*J_star2*det_J*rho;
//in_element->local_M[22] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[23] = 0.166666666666667*J_bar31*J_star2*det_J*rho;
//in_element->local_M[24] = 0.166666666666667*J_bar11*J_bar31*det_J*rho;
//in_element->local_M[25] = 0.166666666666667*J_bar21*J_bar31*det_J*rho;
//in_element->local_M[26] = 0.166666666666667*det_J*(J_bar11*J_bar11*rho + J_bar21*J_bar21*rho + J_bar31*J_bar31*rho);
//in_element->local_M[27] = 0.166666666666667*J_bar11*J_bar32*det_J*rho;
//in_element->local_M[28] = 0.166666666666667*J_bar21*J_bar32*det_J*rho;
//in_element->local_M[29] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[30] = 0.166666666666667*J_bar11*J_bar33*det_J*rho;
//in_element->local_M[31] = 0.166666666666667*J_bar21*J_bar33*det_J*rho;
//in_element->local_M[32] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[33] = 0.166666666666667*J_bar11*J_star3*det_J*rho;
//in_element->local_M[34] = 0.166666666666667*J_bar21*J_star3*det_J*rho;
//in_element->local_M[35] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[36] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[37] = 0.166666666666667*J_bar11*J_bar22*det_J*rho;
//in_element->local_M[38] = 0.166666666666667*J_bar11*J_bar32*det_J*rho;
//in_element->local_M[39] = 0.166666666666667*det_J*(J_bar12*J_bar12*rho + J_bar22*J_bar22*rho + J_bar32*J_bar32*rho);
//in_element->local_M[40] = 0.166666666666667*J_bar12*J_bar22*det_J*rho;
//in_element->local_M[41] = 0.166666666666667*J_bar12*J_bar32*det_J*rho;
//in_element->local_M[42] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[43] = 0.166666666666667*J_bar13*J_bar22*det_J*rho;
//in_element->local_M[44] = 0.166666666666667*J_bar13*J_bar32*det_J*rho;
//in_element->local_M[45] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[46] = 0.166666666666667*J_bar22*J_star1*det_J*rho;
//in_element->local_M[47] = 0.166666666666667*J_bar32*J_star1*det_J*rho;
//in_element->local_M[48] = 0.166666666666667*J_bar12*J_bar21*det_J*rho;
//in_element->local_M[49] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[50] = 0.166666666666667*J_bar21*J_bar32*det_J*rho;
//in_element->local_M[51] = 0.166666666666667*J_bar12*J_bar22*det_J*rho;
//in_element->local_M[52] = 0.166666666666667*det_J*(J_bar12*J_bar12*rho + J_bar22*J_bar22*rho + J_bar32*J_bar32*rho);
//in_element->local_M[53] = 0.166666666666667*J_bar22*J_bar32*det_J*rho;
//in_element->local_M[54] = 0.166666666666667*J_bar12*J_bar23*det_J*rho;
//in_element->local_M[55] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[56] = 0.166666666666667*J_bar23*J_bar32*det_J*rho;
//in_element->local_M[57] = 0.166666666666667*J_bar12*J_star2*det_J*rho;
//in_element->local_M[58] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[59] = 0.166666666666667*J_bar32*J_star2*det_J*rho;
//in_element->local_M[60] = 0.166666666666667*J_bar12*J_bar31*det_J*rho;
//in_element->local_M[61] = 0.166666666666667*J_bar22*J_bar31*det_J*rho;
//in_element->local_M[62] = 0.166666666666667*det_J*(J_bar11*J_bar12*rho + J_bar21*J_bar22*rho + J_bar31*J_bar32*rho);
//in_element->local_M[63] = 0.166666666666667*J_bar12*J_bar32*det_J*rho;
//in_element->local_M[64] = 0.166666666666667*J_bar22*J_bar32*det_J*rho;
//in_element->local_M[65] = 0.166666666666667*det_J*(J_bar12*J_bar12*rho + J_bar22*J_bar22*rho + J_bar32*J_bar32*rho);
//in_element->local_M[66] = 0.166666666666667*J_bar12*J_bar33*det_J*rho;
//in_element->local_M[67] = 0.166666666666667*J_bar22*J_bar33*det_J*rho;
//in_element->local_M[68] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[69] = 0.166666666666667*J_bar12*J_star3*det_J*rho;
//in_element->local_M[70] = 0.166666666666667*J_bar22*J_star3*det_J*rho;
//in_element->local_M[71] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[72] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[73] = 0.166666666666667*J_bar11*J_bar23*det_J*rho;
//in_element->local_M[74] = 0.166666666666667*J_bar11*J_bar33*det_J*rho;
//in_element->local_M[75] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[76] = 0.166666666666667*J_bar12*J_bar23*det_J*rho;
//in_element->local_M[77] = 0.166666666666667*J_bar12*J_bar33*det_J*rho;
//in_element->local_M[78] = 0.166666666666667*det_J*(J_bar13*J_bar13*rho + J_bar23*J_bar23*rho + J_bar33*J_bar33*rho);
//in_element->local_M[79] = 0.166666666666667*J_bar13*J_bar23*det_J*rho;
//in_element->local_M[80] = 0.166666666666667*J_bar13*J_bar33*det_J*rho;
//in_element->local_M[81] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[82] = 0.166666666666667*J_bar23*J_star1*det_J*rho;
//in_element->local_M[83] = 0.166666666666667*J_bar33*J_star1*det_J*rho;
//in_element->local_M[84] = 0.166666666666667*J_bar13*J_bar21*det_J*rho;
//in_element->local_M[85] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[86] = 0.166666666666667*J_bar21*J_bar33*det_J*rho;
//in_element->local_M[87] = 0.166666666666667*J_bar13*J_bar22*det_J*rho;
//in_element->local_M[88] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[89] = 0.166666666666667*J_bar22*J_bar33*det_J*rho;
//in_element->local_M[90] = 0.166666666666667*J_bar13*J_bar23*det_J*rho;
//in_element->local_M[91] = 0.166666666666667*det_J*(J_bar13*J_bar13*rho + J_bar23*J_bar23*rho + J_bar33*J_bar33*rho);
//in_element->local_M[92] = 0.166666666666667*J_bar23*J_bar33*det_J*rho;
//in_element->local_M[93] = 0.166666666666667*J_bar13*J_star2*det_J*rho;
//in_element->local_M[94] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[95] = 0.166666666666667*J_bar33*J_star2*det_J*rho;
//in_element->local_M[96] = 0.166666666666667*J_bar13*J_bar31*det_J*rho;
//in_element->local_M[97] = 0.166666666666667*J_bar23*J_bar31*det_J*rho;
//in_element->local_M[98] = 0.166666666666667*det_J*(J_bar11*J_bar13*rho + J_bar21*J_bar23*rho + J_bar31*J_bar33*rho);
//in_element->local_M[99] = 0.166666666666667*J_bar13*J_bar32*det_J*rho;
//in_element->local_M[100] = 0.166666666666667*J_bar23*J_bar32*det_J*rho;
//in_element->local_M[101] = 0.166666666666667*det_J*(J_bar12*J_bar13*rho + J_bar22*J_bar23*rho + J_bar32*J_bar33*rho);
//in_element->local_M[102] = 0.166666666666667*J_bar13*J_bar33*det_J*rho;
//in_element->local_M[103] = 0.166666666666667*J_bar23*J_bar33*det_J*rho;
//in_element->local_M[104] = 0.166666666666667*det_J*(J_bar13*J_bar13*rho + J_bar23*J_bar23*rho + J_bar33*J_bar33*rho);
//in_element->local_M[105] = 0.166666666666667*J_bar13*J_star3*det_J*rho;
//in_element->local_M[106] = 0.166666666666667*J_bar23*J_star3*det_J*rho;
//in_element->local_M[107] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[108] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[109] = 0.166666666666667*J_bar11*J_star2*det_J*rho;
//in_element->local_M[110] = 0.166666666666667*J_bar11*J_star3*det_J*rho;
//in_element->local_M[111] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[112] = 0.166666666666667*J_bar12*J_star2*det_J*rho;
//in_element->local_M[113] = 0.166666666666667*J_bar12*J_star3*det_J*rho;
//in_element->local_M[114] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[115] = 0.166666666666667*J_bar13*J_star2*det_J*rho;
//in_element->local_M[116] = 0.166666666666667*J_bar13*J_star3*det_J*rho;
//in_element->local_M[117] = 0.166666666666667*det_J*(J_star1*J_star1*rho + J_star2*J_star2*rho + J_star3*J_star3*rho);
//in_element->local_M[118] = 0.166666666666667*J_star1*J_star2*det_J*rho;
//in_element->local_M[119] = 0.166666666666667*J_star1*J_star3*det_J*rho;
//in_element->local_M[120] = 0.166666666666667*J_bar21*J_star1*det_J*rho;
//in_element->local_M[121] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[122] = 0.166666666666667*J_bar21*J_star3*det_J*rho;
//in_element->local_M[123] = 0.166666666666667*J_bar22*J_star1*det_J*rho;
//in_element->local_M[124] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[125] = 0.166666666666667*J_bar22*J_star3*det_J*rho;
//in_element->local_M[126] = 0.166666666666667*J_bar23*J_star1*det_J*rho;
//in_element->local_M[127] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[128] = 0.166666666666667*J_bar23*J_star3*det_J*rho;
//in_element->local_M[129] = 0.166666666666667*J_star1*J_star2*det_J*rho;
//in_element->local_M[130] = 0.166666666666667*det_J*(J_star1*J_star1*rho + J_star2*J_star2*rho + J_star3*J_star3*rho);
//in_element->local_M[131] = 0.166666666666667*J_star2*J_star3*det_J*rho;
//in_element->local_M[132] = 0.166666666666667*J_bar31*J_star1*det_J*rho;
//in_element->local_M[133] = 0.166666666666667*J_bar31*J_star2*det_J*rho;
//in_element->local_M[134] = 0.166666666666667*det_J*(J_bar11*J_star1*rho + J_bar21*J_star2*rho + J_bar31*J_star3*rho);
//in_element->local_M[135] = 0.166666666666667*J_bar32*J_star1*det_J*rho;
//in_element->local_M[136] = 0.166666666666667*J_bar32*J_star2*det_J*rho;
//in_element->local_M[137] = 0.166666666666667*det_J*(J_bar12*J_star1*rho + J_bar22*J_star2*rho + J_bar32*J_star3*rho);
//in_element->local_M[138] = 0.166666666666667*J_bar33*J_star1*det_J*rho;
//in_element->local_M[139] = 0.166666666666667*J_bar33*J_star2*det_J*rho;
//in_element->local_M[140] = 0.166666666666667*det_J*(J_bar13*J_star1*rho + J_bar23*J_star2*rho + J_bar33*J_star3*rho);
//in_element->local_M[141] = 0.166666666666667*J_star1*J_star3*det_J*rho;
//in_element->local_M[142] = 0.166666666666667*J_star2*J_star3*det_J*rho;
//in_element->local_M[143] = 0.166666666666667*det_J*(J_star1*J_star1*rho + J_star2*J_star2*rho + J_star3*J_star3*rho);


	float b1 = 0.0;
	float b2 = -19.81*rho;//-(9.81 *1000.0)*(det_J / 6) / 4.0;
	float b3 = 0.0;

	in_element->f_body[0] = b1*det_J / 12.0;
	in_element->f_body[1] = b2*det_J / 12.0;
	in_element->f_body[2] = b3*det_J / 12.0;
	in_element->f_body[3] = b1*det_J / 12.0;
	in_element->f_body[4] = b2*det_J / 12.0;
	in_element->f_body[5] = b3*det_J / 12.0;
	in_element->f_body[6] = b1*det_J / 12.0;
	in_element->f_body[7] = b2*det_J / 12.0;
	in_element->f_body[8] = b3*det_J / 12.0;
	in_element->f_body[9] = -b1*det_J / 12.0;
	in_element->f_body[10] = -b2*det_J / 12.0;
	in_element->f_body[11] = -b3*det_J / 12.0;
}



__global__ void gpu_make_K_corotational(AFEM::element *in_vec, AFEM::position_3D *in_pos, AFEM::position_3D *original_pos, int numElem, int numNodes, float *K_d, float *M_d, float *f_d,float *RKx_matrix_d)
{

	int x = threadIdx.x + blockIdx.x * blockDim.x;
	if (x < numElem){
		find_Jacobian_localK_localM_corotational(&in_vec[x], in_pos,original_pos);
		//find_localM(&in_vec[x]);
		//K_d[x] = (in_vec[x]).local_K[0];
		int DOF[12];
		int counter = 0;
		//The two loops are responsible for finding the DOF (or q_i) for each element
		for (int npe = 0; npe < 4; npe++){
			//dummy_node = nodesInElem[nodesinelemX(npe, offset, 4)]; // The row of the matrix we looking at will be k_th element and npe (nodes per element) 	
			for (int dof = 0; dof < 3; dof++){

				DOF[counter] = in_vec[x].position_info[npe].displacement_index[dof];
				counter++;

			}
		}

		for (int c = 0; c < 12; c++){
			for (int r = 0; r < 12; r++){

				//d_A_dense[IDX2C(DOF[c], DOF[r], 3000)] = d_A_dense[IDX2C(DOF[c], DOF[r], 3000)] + E_vector[offset * 144 + c*12+r];
				atomicAdda(&(K_d[IDX2C(DOF[c], DOF[r], 3 * (numNodes))]), in_vec[x].local_K[c * 12 + r]);


				atomicAdda(&(M_d[IDX2C(DOF[c], DOF[r], 3 * (numNodes))]), in_vec[x].local_M[c * 12 + r]);
				//atomicAdda(&(RK_matrix_d[IDX2C(DOF[c], DOF[r], 3 * (numNodes))]), in_vec[x].local_RK[c * 12 + r]);

				//atomicAdda(&(M_d[IDX2C(DOF[c], DOF[r], 3 * (numNodes))]), in_vec[x].local_M[c * 12 + r]);
				//IDX2C(DOF[c], DOF[r], 3000)
				//K[IDX2C(DOF[r], DOF[c], numP*dim)] = K[IDX2C(DOF[r], DOF[c], numP*dim)] + E[k][r][c];

			}
			//atomicAdda(&(f_d[DOF[c]]), in_vec[x].f_body[c]);
			/*if (x == 800){
				atomicAdda(&(f_d[DOF[c]]), in_vec[x].f_body[c]);
				}*/
			atomicAdda(&(f_d[DOF[c]]), in_vec[x].f_body[c]);
			atomicAdda(&(RKx_matrix_d[DOF[c]]), in_vec[x].local_RKx[c]);
		}
		//printf("hi");
	}

}








//find the vector value of dt*f_ext - dt*K*(u(t)-u(0))+dt*dt K*u_dot(t)
//In the code I have set:
//a= dt*f_ext
//b= dt*K*(x(t)-x(0))
//c= dt*dt K*u_dot(t)
//so RHS = a-b+c
//And LHS: = M-dt*dt* K
__global__ void find_A_b_dynamic_corotational(float *K_in, float *dx_in, float *x_zero, float *x_current,float *u_dot, float *f_ext, float *RHS, float *M_in, float *LHS, float *RKx,int num_nodes, float dt, int dim){
	int x = threadIdx.x + blockIdx.x *blockDim.x;

	if (x < num_nodes*dim){
		float a, b, c;
		float b1, b2;
		b = c = 0;
		b1 = b2 = 0;
		a = f_ext[x];
		for (int i = 0; i < num_nodes*dim; i++){
			/*if (i == x){
				M_in[IDX2C(i, x, 3 * (num_nodes))] =
				}*/
			//+ RK[IDX2C(x,i, 3 * (num_nodes))] * x_zero[i];
			b2 = b2 + K_in[IDX2C(i, x, 3 * (num_nodes))] * x_current[i];

			//= b1 - b2;
			//b = b + K_in[IDX2C(i, x, 3 * (num_nodes))] * dx_in[i];
			//c = c + K_in[IDX2C(i, x, 3 * (num_nodes))] * u_dot[i]; 
			//origional
			//float c1 = dt*rm*M_in[IDX2C(i, x, 3 * num_nodes)] + (dt *rk-dt*dt)*K_in[IDX2C(i, x, 3 * num_nodes)];
			float c1 = M_in[IDX2C(i, x, 3 * num_nodes)];
			c += c1*u_dot[i];

			//Origional
			//LHS[IDX2C(i, x, 3 * (num_nodes))] = (1.0-dt*rm)*M_in[IDX2C(i, x, 3 * (num_nodes))] - (dt*rk+dt*dt)*K_in[IDX2C(i, x, 3 * (num_nodes))];
			LHS[IDX2C(i, x, 3 * (num_nodes))] = (1.0)*M_in[IDX2C(i, x, 3 * (num_nodes))] + (dt*dt)*K_in[IDX2C(i, x, 3 * (num_nodes))];
			/*if (i == x){

			}
			else{
			LHS[IDX2C(i, x, 3 * (num_nodes))] = (dt*dt)*K_in[IDX2C(i, x, 3 * (num_nodes))];
			}*/

		}
		b = RKx[x] - b2;
		a = a*dt;
		b = b*dt;


		RHS[x] = a+b + c;
		//RHS[x] = f_ext[x];
	}
}





























#if 0

__global__ void vecAdd(double *a, double *b, double *c, int n)
{
	// Get our global thread ID
	int id = blockIdx.x*blockDim.x + threadIdx.x;

	// Make sure we do not go out of bounds
	if (id < n)
		c[id] = a[id] + b[id];
}

void hello(){
	// Size of vectors
	int n = 100000;

	// Host input vectors
	double *h_a;
	double *h_b;
	//Host output vector
	double *h_c;

	// Device input vectors
	double *d_a;
	double *d_b;
	//Device output vector
	double *d_c;

	// Size, in bytes, of each vector
	size_t bytes = n*sizeof(double);

	// Allocate memory for each vector on host
	h_a = (double*)malloc(bytes);
	h_b = (double*)malloc(bytes);
	h_c = (double*)malloc(bytes);

	// Allocate memory for each vector on GPU
	cudaMalloc(&d_a, bytes);
	cudaMalloc(&d_b, bytes);
	cudaMalloc(&d_c, bytes);

	int i;
	// Initialize vectors on host
	for (i = 0; i < n; i++) {
		h_a[i] = sin(i)*sin(i);
		h_b[i] = cos(i)*cos(i);
	}

	// Copy host vectors to device
	cudaMemcpy(d_a, h_a, bytes, cudaMemcpyHostToDevice);
	cudaMemcpy(d_b, h_b, bytes, cudaMemcpyHostToDevice);

	int blockSize, gridSize;

	// Number of threads in each thread block
	blockSize = 1024;

	// Number of thread blocks in grid
	gridSize = (int)ceil((float)n / blockSize);

	// Execute the kernel
	vecAdd << <gridSize, blockSize >> >(d_a, d_b, d_c, n);

	// Copy array back to host
	cudaMemcpy(h_c, d_c, bytes, cudaMemcpyDeviceToHost);

	// Sum up vector c and print result divided by n, this should equal 1 within error
	double sum = 0;
	for (i = 0; i < n; i++)
		sum += h_c[i];
	printf("final result: %f\n", sum / n);

	// Release device memory
	cudaFree(d_a);
	cudaFree(d_b);
	cudaFree(d_c);

	// Release host memory
	free(h_a);
	free(h_b);
	free(h_c);

}

//__global__ void make_K_cuda3d(double *E_vector, int *nodesInElem_device, double *x_vector, double *y_vector, double *z_vector, int *displaceInElem_device, float *d_A_dense, int *numnodes);//3D
//__global__ void make_K_cuda2d(double *K, int *nodesInElem, double *x_vector, double *y_vector, int *displaceInElem_device, float *d_A_dense, int numnodes, double thickness,double young_E,double nu,double alpha,double beta1,double beta2, double rho, double dt,double c_xi,int numE);//2D
//__global__ void make_global_K(void); 






#endif // 0
